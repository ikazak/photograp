<?php
if (PHP_SAPI !== 'cli') {
    echo "This script should only be run from the command line.";
    exit(1);
}

$arguments = $argv;
$route = isset($arguments[1]) ? strtolower($arguments[1]) : '';
$filename = isset($arguments[2]) ? $arguments[2] : '';

if ($route == "run") {
    include "_frontend/core/loadenv.php";
    $host = getenv("rootpath");
    if ($host == null) {
        echo "‚ùå ERROR: 'rootpath' has no value (.env file)\n";
        echo "üí° You can use: http://localhost:9999 as rootpath\n\n";
        exit;
    }
    $dir = getenv("main_dir");
    $dir_msg = "";
    $dir_comm = "";
    if ($dir != null) {
        $dir = realpath(__DIR__ . '/../../../' . $dir);

        if (!is_dir($dir)) {
            echo "‚ùå Directory $dir does not exist.\n";
            exit(1);
        }
        $dir_comm = " -t \"$dir\"";
        $dir_msg = "üìÅ Document root: $dir\n";
    }


    echo "\n‚ö°‚ö° Basixs Framework by CodeYRO‚ö°‚ö°\n\n";
    echo "üîÑ Serving at " . "\033[41m$host\033[0m\n" . "\n";
    echo $dir_msg;
    echo "--You can stop server by CTRL+C on your console\n\n";

    $exp = explode("//", $host);
    $runner = $exp[1];

    $phpPath = PHP_BINARY;

    $cmd = "php -S $runner" . $dir_comm;
    passthru($cmd);
    exit;
}

if($route == "dbmigrate"){
    include "_frontend/core/loadenv.php";

    if ($filename == "") {
        echo "‚ùå Please filename for migration.\n";
        exit(1);
    }

    include "_backend/core/be.php";
    include "_backend/core/classes/Migration.php";
    
    $migFile = $filename;
    if(! file_exists("_backend/core/database/$migFile.php")){
        echo "‚ùå Invalid migration name\n";exit;
    }
    include "_backend/core/database/$migFile.php";
    exit;
}

if ($route == "dbload") {
    include "_frontend/core/loadenv.php";
    $dbname = getenv("database");
    if ($dbname == null || $dbname == "") {
        echo "‚ùå database not found @ .env file\n";
        exit;
    }
    include "_backend/core/be.php";
    try {
        $pdo = pdo($dbname, true);
        $stmnt = $pdo->prepare("Create database `$dbname`;");
        $stmnt->execute();
        $rowcount = $stmnt->rowCount();
        echo "‚úîÔ∏è Database $dbname created";
        exit;
    } catch (PDOException $e) {
        echo "‚ùå " . $e->getMessage();
        exit;
    }
}

if ($route == "+dbtable") {
    if ($filename == "") {
        echo "‚ùå Please provide a table name.\n";
        exit(1);
    }
    include "_frontend/core/loadenv.php";
    $dbname = getenv("database");
    if ($dbname == null || $dbname == "") {
        echo "‚ùå database not found @ .env file\n";
        exit;
    }
    include "_backend/core/be.php";
    try {
        $pdo = pdo($dbname);
        $stmnt = $pdo->prepare("Create table `$filename` (id int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ");
        $stmnt->execute();
        $row = $stmnt->rowCount();
        echo "‚úîÔ∏è Table $filename created";
        exit;
    } catch (PDOException $e) {
        echo "‚ùå " . $e->getMessage();
        exit;
    }
}

if ($route == "+base") {
    if ($filename == "") {
        echo "‚ùå Please provide a filename for the base.\n";
        exit(1);
    }
    $newname = ucfirst($filename);
    $phpFile = "_backend/base/" . ucfirst($newname) . ".php";

    $phpContent = <<<EOT
    <?php 
        namespace Tables;
        use Classes\BaseTable;

        class $newname extends BaseTable{
            
            protected \$table = "$filename";

            protected \$fillable = [];

            protected \$guarded = [];

            protected \$hidden = ['password'];

            protected \$timestamps = false;

        }
    ?>
    EOT;

    if (file_exists($phpFile)) {
        echo "‚ùå File already exists. Please choose a different name.\n";
        exit(1);
    } else {
        if (file_put_contents($phpFile, $phpContent) !== false) {
            echo "‚úîÔ∏è Base file created successfully: $phpFile\n";
            exit(0);
        } else {
            echo "‚ùå Failed to create Base file.\n";
            exit(1);
        }
    }
}

if ($route == "+class") {
    if ($filename == "") {
        echo "‚ùå Please provide a filename for the class.\n";
        exit(1);
    }
    $newname = ucfirst($filename);
    $phpFile = "_backend/core/classes/" . ucfirst($newname) . ".php";

    $phpContent = <<<EOT
    <?php
    namespace Classes;

    class $newname{

        //create a function here...

    }
    ?>
    EOT;

    if (file_exists($phpFile)) {
        echo "‚ùå File already exists. Please choose a different name.\n";
        exit(1);
    } else {
        if (file_put_contents($phpFile, $phpContent) !== false) {
            echo "‚úîÔ∏è Class file created successfully: $phpFile\n";
            exit(0);
        } else {
            echo "‚ùå Failed to create Class file.\n";
            exit(1);
        }
    }
}

if ($route == "+model") {
    if ($filename == "") {
        echo "‚ùå Please provide a filename for the model.\n";
        exit(1);
    }
    $newname = ucfirst($filename);
    $phpFile = "_backend/model/" . ucfirst($newname) . ".php";

    $phpContent = <<<EOT
    <?php 
    namespace Models;

    class $filename{
        
        public function __construct() {
            // Constructor code here
            // You can initialize properties or perform setup tasks
        }


        static function test(){
            echo 'Hello Basixs user. This is model file';
        }

    

    }
    ?>
    EOT;

    if (file_exists($phpFile)) {
        echo "‚ùå File already exists. Please choose a different name.\n";
        exit(1);
    } else {
        if (file_put_contents($phpFile, $phpContent) !== false) {
            echo "‚úîÔ∏è Model file created successfully: $phpFile\n";
            exit(0);
        } else {
            echo "‚ùå Failed to create model file.\n";
            exit(1);
        }
    }
} else if ($route == "+route") {
    if ($filename == "") {
        echo "‚ùå Please provide a filename for the controller.\n";
        exit(1);
    }
    if (! str_contains($filename, "/")) {
        echo "‚ùå Please provide a valid route name, Example: admin/add.\n";
        exit(1);
    }
    $newname = ucfirst($filename);
    $phpFile = "_backend/_routes/" . ucfirst($newname) . ".php";

    $phpContent = <<<EOT
    <?php 
    //Add codes here...



    


    ?>
    EOT;

    if (file_exists($phpFile)) {
        echo "‚ùå File already exists. Please choose a different name.\n";
        exit(1);
    } else {
        $directory = dirname($phpFile);

        if (!is_dir($directory)) {
            if (!mkdir($directory, 0777, true)) {
                die("Failed to create directories: $directory");
            }
        }

        if (file_put_contents($phpFile, $phpContent) !== false) {
            echo "‚úîÔ∏è Route file created successfully: $phpFile\n";
            exit(0);
        } else {
            echo "‚ùå Failed to create controller file.\n";
            exit(1);
        }
    }
} else if ($route == "what") {
    if ($filename == "") {
        echo "‚ùå parameter not found for (what) command.\n";
        exit(1);
    }
    if ($filename == "frontend" || $filename == "backend") {
        include "_frontend/core/loadenv.php";
        $hostserver = null;
        $ext = "";
        if (getenv("rootpath") == null || getenv("rootpath") == "") {
            $ext = basename(realpath(__DIR__ . '/../..'));
            $hostserver = "http://localhost/$ext";
        } else {
            $hostserver = getenv("rootpath");
        }
        if ($filename == "frontend") {
            echo "üîó Front-End URL:  " . "\033[32m$hostserver?page=\033[0m\n";
            exit;
        }
        if ($filename == "backend") {
            echo "üîó Back-End URL:  " . "\033[32m$hostserver?be=\033[0m\n";
            exit;
        }
    }
    if ($filename == "db" || $filename == "database") {
        include "_frontend/core/loadenv.php";
        echo getenv("database") == null ? "‚ùå No database yet" : "üóÉÔ∏è  Your Database:  " . getenv("database");
        exit;
    }
} else {
    echo "Invalid command.\n";
    exit(1);
}
